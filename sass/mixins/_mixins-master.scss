/**
 * Unstyle List
 */
%list-unstyled {
	list-style-type: none;
	padding-left: 0;
}

/**
 * Included in title box, but separated so can give styling to content w/o using the full title-box
 * @requires {function} gutter (susy)
 */
@mixin title-box-inc {
	text-align: center;
	padding: gutter(6);
}

/** 
 * Background and indent of title box, broken out into a mixin so can be included with or without a breakpoint in the tile-box mixin
 * @param {number} $opacity
 * @param {bool} $indent - if true, box recedes up into the image
 * @requires {function} gutter (susy)
 */
@mixin title-box-breakpoint-inc($opacity: 1, $indent: true) {
	background-color: rgba(255,255,255, $opacity);
	position: relative;
	@if $indent == true {
		margin-top: -#{gutter(2)};
	}
}

/**
 * White Box often used with featured content blocks to display title, desc, etc
 *
 * @param {number} $opacity
 * @param {string} $size
 *      span - use span-breakpoint
 *      width - use max-width
 * @param {bool} $indent - if true, box recedes up into the image
 * @param {string} $breakpoint - breakpoint in which the box recedes and has a background color
 *
 * @requires {mixin} breakpoint
 * @requires {mixin} span-breakpoint
 * @requires {mixin} center-block
 * @requires {mixin} title-box-inc
 * @requires {mixin} title-box-breakpoint-inc
 * @requires {function} gutter (susy)
 *
 */
@mixin title-box($opacity: 1, $size: span, $indent: true, $breakpoint: large-only) {
	@include center-block;
	@include title-box-inc;

	@if $breakpoint {
		@include breakpoint($breakpoint) {
			@include title-box-breakpoint-inc($opacity, $indent);
		}
	} @else {
		@include title-box-breakpoint-inc($opacity, $indent);
		@include breakpoint(small-only) {
			margin-left: gutter(4);
			margin-right: gutter(4);
		}
	}


	@if $size == span {
		@include span-breakpoint(main-full, 8, 6, null, $type: width);
	}

	@if $size == width {
		@include breakpoint(large-only) {
			max-width: 80%;
		}
	}
}

/**
 * Content with fixed ratio that is never wider or taller than the browser window
 *
 * @param {number} $x
 * @param {number} $y
 *
 * @example 
 *  @include viewport-ratio(3, 2);
 *
 */
@mixin viewport-ratio($x, $y) {
	width: 100vw;
	height: $y * 100vw / $x;
	max-width: $x / $y * 100vh;
	max-height: 100vh;
}


/*
 * Content with fixed ratio
 * 
 * @param {number} $x
 * @param {number} $y
 *
 * @example 
 *  @include aspect-ratio(3, 2);
 *
 */
@mixin aspect-ratio($x, $y) {
  position: relative;
  overflow: hidden;
  &:before {
	display: block;
	content: "";
	width: 100%;
	padding-top: ($y / $x) * 100%;
  }
  > .ar-content {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
  }
}

/*
 * Horizontally center display-block content
 */
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
	float: none;
}

/*
 * Horizontally and vertically center absolutely-positioned content
 */
@mixin center-absolute {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}

/*
 * Position background image so that on small screens it maintains a specific aspect ratio
 *
 * @requires {mixin} breakpoint
 * @requires {mixin} viewport-ratio
 * @requires {mixin} center-block
 *
 */
@mixin absolute-background-image {
	background-size: cover; 

	@include breakpoint(large_medium) {
		position: absolute;
		width: 100%;
		height: 100%;
	}
	@include breakpoint(small-only) {
		position: relative;
		@include viewport-ratio(3, 2);
		@include center-block;
	}

}


/*
 * Wrapper for content that will be horizontally-scrolled
 */
@mixin scroller__items() {
	width: 100%;
	overflow-y: hidden;
	overflow-x: scroll;
	white-space: nowrap;
}

/*
 * Horizontally-scrolled content
 */
@mixin scroller__item() {
	float: none;
	display: inline-block;
	white-space: normal;
	vertical-align: top;
}

@mixin scroller__cards($breakpoint: false) {
	@if $breakpoint == true { 
		@include breakpoint(medium_small) {
			padding-left: gutter(4);
			@include scroller__items();
		}
	} @else {
		@include scroller__items();
		@include breakpoint(medium_small) {
			padding-left: gutter(4);
		}
	}
}

@mixin scroller__card($breakpoint: false) {
	@if mixin-exists(span-breakpoint) {
		@include span-breakpoint(main-full, 3, $column-number-small: 4);
	} @else {
		@include span(3 of 12);
		@include breakpoint(medium-only) {
			width: span(3.5 of 12);
		}
		@include breakpoint(small-only) {
			width: span(5 of 12);
		}
	}

	@if $breakpoint == true { 
		@include breakpoint(medium_small) { @include scroller__item(); }
	} @else {
		@include scroller__item();
	}
}


/*
 * Transitions - used to help keep them consistent
 *
 * @param {string} $prop - property that transition is being applied to
 * @param {number} $transition-time - length of transition
 * @example
 *  @include transition(opacity);
 *
 */
$transition-time: 0.3s;
@mixin transition($prop, $transition-time: $transition-time) {
	transition: $prop $transition-time ease;
}


/*
 * Opacity with support for IE8
 *
 * @param {Number} $opacity
 */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


/*
 * Clearfix
 */
%clearfix {
  &:after {
	content: "";
	display: table;
	clear: both;
  }
}


/*
 * On hover, change opacity
 * @param {number} $opacity
 */
$hover-opacity: 0.5;
@mixin is-hover($opacity: $hover-opacity) {
	@include transition(opacity);
	&:hover { 
		opacity: $opacity; 
	}
}

//tktk why does this exist?
%is-hover {
	@at-root a#{&} { @include is-hover; }
	a { @include is-hover }
	@extend %is-hover;
}

%is-hover--blue {
	color: $color__blue-dmag;
	@include transition(color);
}

@mixin link-underline {
	background-image: linear-gradient($color__white, $color__white),linear-gradient($color__white, $color__white),linear-gradient($color__blue-dmag, $color__blue-dmag);
	background-size: .05em 1px,.05em 1px,1px 1px;
	background-repeat: no-repeat,no-repeat,repeat-x;
	background-position: 0 95%,100% 95%,0 95%;
}

@mixin link-style {
	@include link-underline;
	text-shadow: 
		0.03em 0 $color__white, 
		-0.03em 0 $color__white,
		0 0.03em $color__white,
		0 -0.03em $color__white,
		0.06em 0 $color__white,
		-0.06em 0 $color__white,
		0.09em 0 $color__white,
		-0.09em 0 $color__white,
		0.12em 0 $color__white,
		-0.12em 0 $color__white,
		0.15em 0 $color__white,
		-0.15em 0 $color__white;
	@include transition(color);

	&:hover {
		color: $color__blue-dmag;
		@include transition(color);
	}
}

@mixin link-style--dark {
	@include link-underline;
	text-shadow: 
		3px 0 $color__gray--darker,
		2px 0 $color__gray--darker,
		1px 0 $color__gray--darker,
		-1px 0 $color__gray--darker,
		-2px 0 $color__gray--darker,
		-3px 0 $color__gray--darker;
	@include transition(color);

	&:hover {
		color: $color__blue-dmag;
		@include transition(color);
	}
}

@mixin no-link-style {
	background-image: none;
	text-decoration: none;
	text-shadow: none;
	&:hover { color: inherit; }
}




/**
 * Break long words so they fit inside their container.
 * Use hyphens if browser supported
 *
 * @see https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/
 */
@mixin word-wrap() {
	overflow-wrap: break-word;
	word-wrap: break-word;
	-ms-word-break: break-all;
	word-break: break-word;
	-ms-hyphens: auto;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;
}





@mixin line-ornaments($color, $width, $topMargin) {
	&:before,
	&:after {
		content: "";
		position: absolute;
		top: 0;
		height: 1px;
		background: $color;
		width: $width;
		margin-top: $topMargin;
	}
	&:before {
		right: 100%;
		margin-right: 15px;
	}
	&:after {
		left: 100%;
		margin-left: 15px;
	}
}


@mixin background-overlay-dark() {
	&:before {
		background-color: rgba(0, 0, 0, 0.2); //make sure text is legible by adding gray filter over image
		content: '';
		display: block;
		position: absolute;
		height: 100%;
		width: 100%;
		top: 0;
		left: 0;
		z-index: $z-base;
	}
}


@function d-logo-width($height) {
	@return 55px * $height / 50px;
}

